---          
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo
  name: pod01-deployment
  labels:
    app: pod01
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod01
  template:
    metadata:
      labels:
        app: pod01
    spec:
      containers:
      - name: pod1
        image: hashicorp/http-echo
        args:
          - "-text=POD Application 01"
---
kind: Service
apiVersion: v1
metadata:
  name: pod01-service
  namespace: demo
spec:
  selector:
    app: pod01
  ports:
    - port: 5678 # Default port for hashicorp/http-echo image   




---          
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo
  name: pod02-deployment
  labels:
    app: pod02
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod02
  template:
    metadata:
      labels:
        app: pod02
    spec:
      containers:
      - name: pod02
        image: hashicorp/http-echo
        args:
          - "-text=<h1>Hola soy el pod 02 </h1>"
---
kind: Service
apiVersion: v1
metadata:
  name: pod02-service
  namespace: demo
spec:
  selector:
    app: pod02
  ports:
    - port: 5678 # Default port for hashicorp/http-echo image   



---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pod-grafana-deployment
  namespace: demo
  labels:
    app: grafana
    component: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      component: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: grafana
    spec:
      securityContext:   # Visualizar esto en Polaris
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      containers:
      - image: grafana/grafana:7.3.7
        name: pod-grafana       
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 500m
            memory: 500Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            value: "admin"
          - name: GF_SECURITY_ADMIN_PASSWORD
            value: "P1nd0nga-x0.21" ### IMPORTANT DEFAULT PASSWORD HERE !!!!!
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
# Uncomment it if you use reverse-proxy            
          - name: GF_SERVER_ROOT_URL
            value: "%(protocol)s://0.0.0.0:%(http_port)s/grafana/"
          #- name: GF_SERVER_DOMAIN
          #  value: testing.cloud.superduperdns.com
          #  value: foobar.elb.us-asd.amazonaws.com
          #- name: GF_SERVER_SERVE_FROM_SUB_PATH
          #  value: "true"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000 
---
kind: Service
apiVersion: v1
metadata:
  name: grafana-service
  namespace: demo
spec:
  selector:
    app: grafana
  ports:
    - port: 3000  
  



###############  ON TEST #########################
---          
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: pod03-deployment
  labels:
    app: pod03
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod03
  template:
    metadata:
      labels:
        app: pod03
    spec:
      containers:
      - name: pod1
        image: hashicorp/http-echo
        args:
          - "-text=Soy un pod en otro namespace"
---
kind: Service
apiVersion: v1
metadata:
  name: pod3service
  namespace: default
spec:
  type: ExternalName
  externalName: pod3service.default.svc.cluster.local
  selector:
    app: pod03
  ports:
    - port: 5678 # Default port for hashicorp/http-echo image     